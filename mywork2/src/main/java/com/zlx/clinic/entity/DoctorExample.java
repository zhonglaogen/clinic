package com.zlx.clinic.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DoctorExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public DoctorExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDIdIsNull() {
            addCriterion("d_id is null");
            return (Criteria) this;
        }

        public Criteria andDIdIsNotNull() {
            addCriterion("d_id is not null");
            return (Criteria) this;
        }

        public Criteria andDIdEqualTo(Integer value) {
            addCriterion("d_id =", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotEqualTo(Integer value) {
            addCriterion("d_id <>", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThan(Integer value) {
            addCriterion("d_id >", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("d_id >=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThan(Integer value) {
            addCriterion("d_id <", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThanOrEqualTo(Integer value) {
            addCriterion("d_id <=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdIn(List<Integer> values) {
            addCriterion("d_id in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotIn(List<Integer> values) {
            addCriterion("d_id not in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdBetween(Integer value1, Integer value2) {
            addCriterion("d_id between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotBetween(Integer value1, Integer value2) {
            addCriterion("d_id not between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDPasswordIsNull() {
            addCriterion("d_password is null");
            return (Criteria) this;
        }

        public Criteria andDPasswordIsNotNull() {
            addCriterion("d_password is not null");
            return (Criteria) this;
        }

        public Criteria andDPasswordEqualTo(String value) {
            addCriterion("d_password =", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordNotEqualTo(String value) {
            addCriterion("d_password <>", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordGreaterThan(String value) {
            addCriterion("d_password >", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("d_password >=", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordLessThan(String value) {
            addCriterion("d_password <", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordLessThanOrEqualTo(String value) {
            addCriterion("d_password <=", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordLike(String value) {
            addCriterion("d_password like", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordNotLike(String value) {
            addCriterion("d_password not like", value, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordIn(List<String> values) {
            addCriterion("d_password in", values, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordNotIn(List<String> values) {
            addCriterion("d_password not in", values, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordBetween(String value1, String value2) {
            addCriterion("d_password between", value1, value2, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDPasswordNotBetween(String value1, String value2) {
            addCriterion("d_password not between", value1, value2, "dPassword");
            return (Criteria) this;
        }

        public Criteria andDNameIsNull() {
            addCriterion("d_name is null");
            return (Criteria) this;
        }

        public Criteria andDNameIsNotNull() {
            addCriterion("d_name is not null");
            return (Criteria) this;
        }

        public Criteria andDNameEqualTo(String value) {
            addCriterion("d_name =", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameNotEqualTo(String value) {
            addCriterion("d_name <>", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameGreaterThan(String value) {
            addCriterion("d_name >", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameGreaterThanOrEqualTo(String value) {
            addCriterion("d_name >=", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameLessThan(String value) {
            addCriterion("d_name <", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameLessThanOrEqualTo(String value) {
            addCriterion("d_name <=", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameLike(String value) {
            addCriterion("d_name like", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameNotLike(String value) {
            addCriterion("d_name not like", value, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameIn(List<String> values) {
            addCriterion("d_name in", values, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameNotIn(List<String> values) {
            addCriterion("d_name not in", values, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameBetween(String value1, String value2) {
            addCriterion("d_name between", value1, value2, "dName");
            return (Criteria) this;
        }

        public Criteria andDNameNotBetween(String value1, String value2) {
            addCriterion("d_name not between", value1, value2, "dName");
            return (Criteria) this;
        }

        public Criteria andDGenderIsNull() {
            addCriterion("d_gender is null");
            return (Criteria) this;
        }

        public Criteria andDGenderIsNotNull() {
            addCriterion("d_gender is not null");
            return (Criteria) this;
        }

        public Criteria andDGenderEqualTo(String value) {
            addCriterion("d_gender =", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderNotEqualTo(String value) {
            addCriterion("d_gender <>", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderGreaterThan(String value) {
            addCriterion("d_gender >", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderGreaterThanOrEqualTo(String value) {
            addCriterion("d_gender >=", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderLessThan(String value) {
            addCriterion("d_gender <", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderLessThanOrEqualTo(String value) {
            addCriterion("d_gender <=", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderLike(String value) {
            addCriterion("d_gender like", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderNotLike(String value) {
            addCriterion("d_gender not like", value, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderIn(List<String> values) {
            addCriterion("d_gender in", values, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderNotIn(List<String> values) {
            addCriterion("d_gender not in", values, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderBetween(String value1, String value2) {
            addCriterion("d_gender between", value1, value2, "dGender");
            return (Criteria) this;
        }

        public Criteria andDGenderNotBetween(String value1, String value2) {
            addCriterion("d_gender not between", value1, value2, "dGender");
            return (Criteria) this;
        }

        public Criteria andDBirthdateIsNull() {
            addCriterion("d_birthdate is null");
            return (Criteria) this;
        }

        public Criteria andDBirthdateIsNotNull() {
            addCriterion("d_birthdate is not null");
            return (Criteria) this;
        }

        public Criteria andDBirthdateEqualTo(Date value) {
            addCriterionForJDBCDate("d_birthdate =", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("d_birthdate <>", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateGreaterThan(Date value) {
            addCriterionForJDBCDate("d_birthdate >", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("d_birthdate >=", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateLessThan(Date value) {
            addCriterionForJDBCDate("d_birthdate <", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("d_birthdate <=", value, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateIn(List<Date> values) {
            addCriterionForJDBCDate("d_birthdate in", values, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("d_birthdate not in", values, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("d_birthdate between", value1, value2, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDBirthdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("d_birthdate not between", value1, value2, "dBirthdate");
            return (Criteria) this;
        }

        public Criteria andDPhoneIsNull() {
            addCriterion("d_phone is null");
            return (Criteria) this;
        }

        public Criteria andDPhoneIsNotNull() {
            addCriterion("d_phone is not null");
            return (Criteria) this;
        }

        public Criteria andDPhoneEqualTo(String value) {
            addCriterion("d_phone =", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneNotEqualTo(String value) {
            addCriterion("d_phone <>", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneGreaterThan(String value) {
            addCriterion("d_phone >", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("d_phone >=", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneLessThan(String value) {
            addCriterion("d_phone <", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneLessThanOrEqualTo(String value) {
            addCriterion("d_phone <=", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneLike(String value) {
            addCriterion("d_phone like", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneNotLike(String value) {
            addCriterion("d_phone not like", value, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneIn(List<String> values) {
            addCriterion("d_phone in", values, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneNotIn(List<String> values) {
            addCriterion("d_phone not in", values, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneBetween(String value1, String value2) {
            addCriterion("d_phone between", value1, value2, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDPhoneNotBetween(String value1, String value2) {
            addCriterion("d_phone not between", value1, value2, "dPhone");
            return (Criteria) this;
        }

        public Criteria andDWorkNameIsNull() {
            addCriterion("d_work_name is null");
            return (Criteria) this;
        }

        public Criteria andDWorkNameIsNotNull() {
            addCriterion("d_work_name is not null");
            return (Criteria) this;
        }

        public Criteria andDWorkNameEqualTo(String value) {
            addCriterion("d_work_name =", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameNotEqualTo(String value) {
            addCriterion("d_work_name <>", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameGreaterThan(String value) {
            addCriterion("d_work_name >", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameGreaterThanOrEqualTo(String value) {
            addCriterion("d_work_name >=", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameLessThan(String value) {
            addCriterion("d_work_name <", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameLessThanOrEqualTo(String value) {
            addCriterion("d_work_name <=", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameLike(String value) {
            addCriterion("d_work_name like", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameNotLike(String value) {
            addCriterion("d_work_name not like", value, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameIn(List<String> values) {
            addCriterion("d_work_name in", values, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameNotIn(List<String> values) {
            addCriterion("d_work_name not in", values, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameBetween(String value1, String value2) {
            addCriterion("d_work_name between", value1, value2, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDWorkNameNotBetween(String value1, String value2) {
            addCriterion("d_work_name not between", value1, value2, "dWorkName");
            return (Criteria) this;
        }

        public Criteria andDRangeIsNull() {
            addCriterion("d_range is null");
            return (Criteria) this;
        }

        public Criteria andDRangeIsNotNull() {
            addCriterion("d_range is not null");
            return (Criteria) this;
        }

        public Criteria andDRangeEqualTo(Byte value) {
            addCriterion("d_range =", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeNotEqualTo(Byte value) {
            addCriterion("d_range <>", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeGreaterThan(Byte value) {
            addCriterion("d_range >", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeGreaterThanOrEqualTo(Byte value) {
            addCriterion("d_range >=", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeLessThan(Byte value) {
            addCriterion("d_range <", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeLessThanOrEqualTo(Byte value) {
            addCriterion("d_range <=", value, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeIn(List<Byte> values) {
            addCriterion("d_range in", values, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeNotIn(List<Byte> values) {
            addCriterion("d_range not in", values, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeBetween(Byte value1, Byte value2) {
            addCriterion("d_range between", value1, value2, "dRange");
            return (Criteria) this;
        }

        public Criteria andDRangeNotBetween(Byte value1, Byte value2) {
            addCriterion("d_range not between", value1, value2, "dRange");
            return (Criteria) this;
        }

        public Criteria andDImgIsNull() {
            addCriterion("d_img is null");
            return (Criteria) this;
        }

        public Criteria andDImgIsNotNull() {
            addCriterion("d_img is not null");
            return (Criteria) this;
        }

        public Criteria andDImgEqualTo(String value) {
            addCriterion("d_img =", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgNotEqualTo(String value) {
            addCriterion("d_img <>", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgGreaterThan(String value) {
            addCriterion("d_img >", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgGreaterThanOrEqualTo(String value) {
            addCriterion("d_img >=", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgLessThan(String value) {
            addCriterion("d_img <", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgLessThanOrEqualTo(String value) {
            addCriterion("d_img <=", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgLike(String value) {
            addCriterion("d_img like", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgNotLike(String value) {
            addCriterion("d_img not like", value, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgIn(List<String> values) {
            addCriterion("d_img in", values, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgNotIn(List<String> values) {
            addCriterion("d_img not in", values, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgBetween(String value1, String value2) {
            addCriterion("d_img between", value1, value2, "dImg");
            return (Criteria) this;
        }

        public Criteria andDImgNotBetween(String value1, String value2) {
            addCriterion("d_img not between", value1, value2, "dImg");
            return (Criteria) this;
        }

        public Criteria andRIdIsNull() {
            addCriterion("r_id is null");
            return (Criteria) this;
        }

        public Criteria andRIdIsNotNull() {
            addCriterion("r_id is not null");
            return (Criteria) this;
        }

        public Criteria andRIdEqualTo(Integer value) {
            addCriterion("r_id =", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotEqualTo(Integer value) {
            addCriterion("r_id <>", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThan(Integer value) {
            addCriterion("r_id >", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("r_id >=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThan(Integer value) {
            addCriterion("r_id <", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdLessThanOrEqualTo(Integer value) {
            addCriterion("r_id <=", value, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdIn(List<Integer> values) {
            addCriterion("r_id in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotIn(List<Integer> values) {
            addCriterion("r_id not in", values, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdBetween(Integer value1, Integer value2) {
            addCriterion("r_id between", value1, value2, "rId");
            return (Criteria) this;
        }

        public Criteria andRIdNotBetween(Integer value1, Integer value2) {
            addCriterion("r_id not between", value1, value2, "rId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table doctor
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 26 08:33:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table doctor
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}