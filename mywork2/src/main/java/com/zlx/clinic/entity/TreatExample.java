package com.zlx.clinic.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class TreatExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public TreatExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andTIdIsNull() {
            addCriterion("t_id is null");
            return (Criteria) this;
        }

        public Criteria andTIdIsNotNull() {
            addCriterion("t_id is not null");
            return (Criteria) this;
        }

        public Criteria andTIdEqualTo(Integer value) {
            addCriterion("t_id =", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdNotEqualTo(Integer value) {
            addCriterion("t_id <>", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdGreaterThan(Integer value) {
            addCriterion("t_id >", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("t_id >=", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdLessThan(Integer value) {
            addCriterion("t_id <", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdLessThanOrEqualTo(Integer value) {
            addCriterion("t_id <=", value, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdIn(List<Integer> values) {
            addCriterion("t_id in", values, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdNotIn(List<Integer> values) {
            addCriterion("t_id not in", values, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdBetween(Integer value1, Integer value2) {
            addCriterion("t_id between", value1, value2, "tId");
            return (Criteria) this;
        }

        public Criteria andTIdNotBetween(Integer value1, Integer value2) {
            addCriterion("t_id not between", value1, value2, "tId");
            return (Criteria) this;
        }

        public Criteria andPIdIsNull() {
            addCriterion("p_id is null");
            return (Criteria) this;
        }

        public Criteria andPIdIsNotNull() {
            addCriterion("p_id is not null");
            return (Criteria) this;
        }

        public Criteria andPIdEqualTo(Integer value) {
            addCriterion("p_id =", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotEqualTo(Integer value) {
            addCriterion("p_id <>", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdGreaterThan(Integer value) {
            addCriterion("p_id >", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("p_id >=", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdLessThan(Integer value) {
            addCriterion("p_id <", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdLessThanOrEqualTo(Integer value) {
            addCriterion("p_id <=", value, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdIn(List<Integer> values) {
            addCriterion("p_id in", values, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotIn(List<Integer> values) {
            addCriterion("p_id not in", values, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdBetween(Integer value1, Integer value2) {
            addCriterion("p_id between", value1, value2, "pId");
            return (Criteria) this;
        }

        public Criteria andPIdNotBetween(Integer value1, Integer value2) {
            addCriterion("p_id not between", value1, value2, "pId");
            return (Criteria) this;
        }

        public Criteria andDIdIsNull() {
            addCriterion("d_id is null");
            return (Criteria) this;
        }

        public Criteria andDIdIsNotNull() {
            addCriterion("d_id is not null");
            return (Criteria) this;
        }

        public Criteria andDIdEqualTo(Integer value) {
            addCriterion("d_id =", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotEqualTo(Integer value) {
            addCriterion("d_id <>", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThan(Integer value) {
            addCriterion("d_id >", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("d_id >=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThan(Integer value) {
            addCriterion("d_id <", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdLessThanOrEqualTo(Integer value) {
            addCriterion("d_id <=", value, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdIn(List<Integer> values) {
            addCriterion("d_id in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotIn(List<Integer> values) {
            addCriterion("d_id not in", values, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdBetween(Integer value1, Integer value2) {
            addCriterion("d_id between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andDIdNotBetween(Integer value1, Integer value2) {
            addCriterion("d_id not between", value1, value2, "dId");
            return (Criteria) this;
        }

        public Criteria andTResultIsNull() {
            addCriterion("t_result is null");
            return (Criteria) this;
        }

        public Criteria andTResultIsNotNull() {
            addCriterion("t_result is not null");
            return (Criteria) this;
        }

        public Criteria andTResultEqualTo(String value) {
            addCriterion("t_result =", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultNotEqualTo(String value) {
            addCriterion("t_result <>", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultGreaterThan(String value) {
            addCriterion("t_result >", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultGreaterThanOrEqualTo(String value) {
            addCriterion("t_result >=", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultLessThan(String value) {
            addCriterion("t_result <", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultLessThanOrEqualTo(String value) {
            addCriterion("t_result <=", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultLike(String value) {
            addCriterion("t_result like", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultNotLike(String value) {
            addCriterion("t_result not like", value, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultIn(List<String> values) {
            addCriterion("t_result in", values, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultNotIn(List<String> values) {
            addCriterion("t_result not in", values, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultBetween(String value1, String value2) {
            addCriterion("t_result between", value1, value2, "tResult");
            return (Criteria) this;
        }

        public Criteria andTResultNotBetween(String value1, String value2) {
            addCriterion("t_result not between", value1, value2, "tResult");
            return (Criteria) this;
        }

        public Criteria andTTypeIsNull() {
            addCriterion("t_type is null");
            return (Criteria) this;
        }

        public Criteria andTTypeIsNotNull() {
            addCriterion("t_type is not null");
            return (Criteria) this;
        }

        public Criteria andTTypeEqualTo(Byte value) {
            addCriterion("t_type =", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeNotEqualTo(Byte value) {
            addCriterion("t_type <>", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeGreaterThan(Byte value) {
            addCriterion("t_type >", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("t_type >=", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeLessThan(Byte value) {
            addCriterion("t_type <", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeLessThanOrEqualTo(Byte value) {
            addCriterion("t_type <=", value, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeIn(List<Byte> values) {
            addCriterion("t_type in", values, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeNotIn(List<Byte> values) {
            addCriterion("t_type not in", values, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeBetween(Byte value1, Byte value2) {
            addCriterion("t_type between", value1, value2, "tType");
            return (Criteria) this;
        }

        public Criteria andTTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("t_type not between", value1, value2, "tType");
            return (Criteria) this;
        }

        public Criteria andTBedIsNull() {
            addCriterion("t_bed is null");
            return (Criteria) this;
        }

        public Criteria andTBedIsNotNull() {
            addCriterion("t_bed is not null");
            return (Criteria) this;
        }

        public Criteria andTBedEqualTo(Boolean value) {
            addCriterion("t_bed =", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedNotEqualTo(Boolean value) {
            addCriterion("t_bed <>", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedGreaterThan(Boolean value) {
            addCriterion("t_bed >", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("t_bed >=", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedLessThan(Boolean value) {
            addCriterion("t_bed <", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedLessThanOrEqualTo(Boolean value) {
            addCriterion("t_bed <=", value, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedIn(List<Boolean> values) {
            addCriterion("t_bed in", values, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedNotIn(List<Boolean> values) {
            addCriterion("t_bed not in", values, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedBetween(Boolean value1, Boolean value2) {
            addCriterion("t_bed between", value1, value2, "tBed");
            return (Criteria) this;
        }

        public Criteria andTBedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("t_bed not between", value1, value2, "tBed");
            return (Criteria) this;
        }

        public Criteria andTDateIsNull() {
            addCriterion("t_date is null");
            return (Criteria) this;
        }

        public Criteria andTDateIsNotNull() {
            addCriterion("t_date is not null");
            return (Criteria) this;
        }

        public Criteria andTDateEqualTo(Date value) {
            addCriterionForJDBCDate("t_date =", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("t_date <>", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateGreaterThan(Date value) {
            addCriterionForJDBCDate("t_date >", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("t_date >=", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateLessThan(Date value) {
            addCriterionForJDBCDate("t_date <", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("t_date <=", value, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateIn(List<Date> values) {
            addCriterionForJDBCDate("t_date in", values, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("t_date not in", values, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("t_date between", value1, value2, "tDate");
            return (Criteria) this;
        }

        public Criteria andTDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("t_date not between", value1, value2, "tDate");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceIsNull() {
            addCriterion("t_total_price is null");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceIsNotNull() {
            addCriterion("t_total_price is not null");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceEqualTo(Integer value) {
            addCriterion("t_total_price =", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceNotEqualTo(Integer value) {
            addCriterion("t_total_price <>", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceGreaterThan(Integer value) {
            addCriterion("t_total_price >", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceGreaterThanOrEqualTo(Integer value) {
            addCriterion("t_total_price >=", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceLessThan(Integer value) {
            addCriterion("t_total_price <", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceLessThanOrEqualTo(Integer value) {
            addCriterion("t_total_price <=", value, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceIn(List<Integer> values) {
            addCriterion("t_total_price in", values, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceNotIn(List<Integer> values) {
            addCriterion("t_total_price not in", values, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceBetween(Integer value1, Integer value2) {
            addCriterion("t_total_price between", value1, value2, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTTotalPriceNotBetween(Integer value1, Integer value2) {
            addCriterion("t_total_price not between", value1, value2, "tTotalPrice");
            return (Criteria) this;
        }

        public Criteria andTPayIsNull() {
            addCriterion("t_pay is null");
            return (Criteria) this;
        }

        public Criteria andTPayIsNotNull() {
            addCriterion("t_pay is not null");
            return (Criteria) this;
        }

        public Criteria andTPayEqualTo(Boolean value) {
            addCriterion("t_pay =", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayNotEqualTo(Boolean value) {
            addCriterion("t_pay <>", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayGreaterThan(Boolean value) {
            addCriterion("t_pay >", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayGreaterThanOrEqualTo(Boolean value) {
            addCriterion("t_pay >=", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayLessThan(Boolean value) {
            addCriterion("t_pay <", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayLessThanOrEqualTo(Boolean value) {
            addCriterion("t_pay <=", value, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayIn(List<Boolean> values) {
            addCriterion("t_pay in", values, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayNotIn(List<Boolean> values) {
            addCriterion("t_pay not in", values, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayBetween(Boolean value1, Boolean value2) {
            addCriterion("t_pay between", value1, value2, "tPay");
            return (Criteria) this;
        }

        public Criteria andTPayNotBetween(Boolean value1, Boolean value2) {
            addCriterion("t_pay not between", value1, value2, "tPay");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table treat
     *
     * @mbggenerated do_not_delete_during_merge Wed Jun 26 08:33:50 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table treat
     *
     * @mbggenerated Wed Jun 26 08:33:50 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}